# - Try to find Pango
# Once done, this will define
#
#  PANGO_FOUND - system has Pango
#  PANGO_INCLUDE_DIRS - the Pango include directories
#  PANGO_LIBRARIES - link these to use Pango
#  PANGO_DEFINITIONS - compiler flags
#  PANGOCAIRO_FOUND - system has Pangocairo
#  PANGOFT2_FOUND - system has Pangoft2

FIND_PACKAGE(PkgConfig)

# pango main library
PKG_CHECK_MODULES(PC_PANGO QUIET pango)
SET(PANGO_DEFINITIONS ${PC_PANGO_CFLAGS_OTHER})

SET(PANGO_INCLUDE_HINTS
    ${PC_PANGO_INCLUDEDIR}
    ${PC_PANGO_INCLUDE_DIRS}
    $ENV{PANGO_HOME}/include
    $ENV{PANGO_ROOT}/include
    /usr/local/include
    /usr/include
    /pango/include
)
FIND_PATH(PANGO_INCLUDE_DIR
    NAMES pango/pango.h
    HINTS ${PANGO_INCLUDE_HINTS}
    PATH_SUFFIXES pango pango-1.0 pango1.0
)

SET(PANGO_LIBRARY_HINTS
    ${PC_PANGO_LIBDIR}
    ${PC_PANGO_LIBRARY_DIRS}
    $ENV{PANGO_HOME}/lib
    $ENV{PANGO_ROOT}/lib
    /usr/local/lib
    /usr/lib
    /lib
    /pango/lib
)
FIND_LIBRARY(PANGO_LIBRARY
    NAMES pango PANGO PANGO-1.0 pango-1.0
    HINTS ${PANGO_LIBRARY_HINTS}
    PATH_SUFFIXES pango pango-1.0 pango1.0
)

SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIR})
SET(PANGO_LIBRARIES ${PANGO_LIBRARY})

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(PANGO DEFAULT_MSG PANGO_INCLUDE_DIRS PANGO_LIBRARIES)
MARK_AS_ADVANCED(PANGO_INCLUDE_DIR PANGO_LIBRARY)

IF(PANGO_FOUND)
    # dependencies

    FIND_PACKAGE(PANGOCairo REQUIRED)
    IF(PANGOCairo_FOUND)
        MESSAGE(STATUS "PANGOCairo found in PANGO libs ${PANGOCairo_LIBRARIES}")
        SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIRS} ${PANGOCairo_INCLUDE_DIRS})
        SET(PANGO_LIBRARIES ${PANGO_LIBRARIES} ${PANGOCairo_LIBRARIES})
    ENDIF()
    
    FIND_PACKAGE(PANGOFt2 REQUIRED)
    IF(PANGOFt2_FOUND)
        MESSAGE(STATUS "PANGOFt2 found in PANGO libs ${PANGOFt2_LIBRARIES}")
        SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIRS} ${PANGOFt2_INCLUDE_DIRS})
        SET(PANGO_LIBRARIES ${PANGO_LIBRARIES} ${PANGOFt2_LIBRARIES})
    ENDIF()
   
    FIND_PACKAGE(GLIB REQUIRED)
    IF(GLIB_FOUND)
        SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIRS} ${GLIB2_INCLUDE_DIRS})
        SET(PANGO_LIBRARIES ${PANGO_LIBRARIES} ${GLIB2_LIBRARIES})   
    ENDIF()

    FIND_PACKAGE(GObject REQUIRED)
    IF(GObject_FOUND)
        MESSAGE(STATUS "GObject found in PANGO libs ${GObject_LIBRARIES}" )
        SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIRS} ${GObject_INCLUDE_DIRS})
        SET(PANGO_LIBRARIES ${PANGO_LIBRARIES} ${GObject_LIBRARIES})
    ENDIF()

    FIND_PACKAGE(HarfBuzz REQUIRED)
    IF(HarfBuzz_FOUND)
        MESSAGE(STATUS "HarfBuzz found in PANGO")
        SET(PANGO_INCLUDE_DIRS ${PANGO_INCLUDE_DIRS} ${HarfBuzz_INCLUDE_DIRS})
        SET(PANGO_LIBRARIES ${PANGO_LIBRARIES} ${HarfBuzz_LIBRARIES})
    ENDIF()	
ENDIF()
